@model IEnumerable<ContosoUniversityApp.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstMidName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EnrollmentDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<ul class="pagination">
    @{
        int numberPage = ViewBag.numberPage;
        int pageCurrent = ViewBag.pageCurrent;
        int offset = 4;//number display page


        //config FirstLink
        if (pageCurrent > 1)
        {
            int prevPage = pageCurrent - 1;
            var PrevLink = new Dictionary<string, string> { { "page", prevPage.ToString() } };
            <li><a asp-controller="Students" asp-action="Index" asp-all-route-data="PrevLink">Prev Link</a></li>
        }

        int from = pageCurrent - offset;
        int to = pageCurrent + offset;
        if (from <= 0)
        {
            from = 1;
            to = offset * 2;
        }


        if (to > numberPage)
        {
            to = numberPage;
        }

        int i;
        for (i = from; i <= to; i++)
        {
            var parms = new Dictionary<string, string>
                {
                        { "page",i.ToString()}
                    };
            if (pageCurrent == i)
            {
                <li class="active"><a asp-controller="Students" asp-action="Index" asp-all-route-data="parms">@i</a></li>
            }
            else
            {
                <li><a asp-controller="Students" asp-action="Index" asp-all-route-data="parms">@i</a></li>
            }

        }

        if (pageCurrent < numberPage - (to / 2))
        {
            <li><a>...</a></li>
            var LastLink = new Dictionary<string, string> { { "page", numberPage.ToString() } };
            <li><a asp-controller="Students" asp-action="Index" asp-all-route-data="LastLink">Last Link</a></li>
        }

        if (pageCurrent < numberPage)
        {
            int nextPage = pageCurrent + 1;
            var NextLink = new Dictionary<string, string> { { "page", nextPage.ToString() } };
            <li><a asp-controller="Students" asp-action="Index" asp-all-route-data="NextLink">Next Link</a></li>
        }
    }
</ul>
